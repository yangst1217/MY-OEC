<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RoleMapper">

    <resultMap type="Role" id="roleResultMap">
        <id column="ROLE_ID" property="ROLE_ID"/>
        <result column="ROLE_NAME" property="ROLE_NAME"/>
        <result column="RIGHTS" property="RIGHTS"/>
    </resultMap>


    <!-- 权限 -->
    <update id="c1" parameterType="pd">
		update SYS_USER_QX 
		set C1=#{value} 
		where U_ID=#{kefu_id}
	</update>

    <!-- 列出二级角色信息 -->
    <select id="listAllERRoles" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from SYS_ROLE 
		where 
			PARENT_ID != '0'
		 and 
		 	PARENT_ID != '7'
	</select>

    <!-- 列出会员二级角色信息 -->
    <select id="listAllappERRoles" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from SYS_ROLE 
		where 
		 	PARENT_ID = '7'
	</select>

    <!-- 列出此角色下的所有用户 -->
    <select id="listAllUByRid" parameterType="pd" resultType="pd">
		select USER_ID
		from SYS_USER
		where 
		ROLE_ID = #{ROLE_ID}
	</select>

    <!-- 列出此角色下的所有会员 -->
    <select id="listAllAppUByRid" parameterType="pd" resultType="pd">
		select USER_ID
		from SYS_APP_USER
		where 
		ROLE_ID = #{ROLE_ID}
	</select>

    <!-- 通过当前登录用的角色id获取管理权限数据 -->
    <select id="findGLbyrid" parameterType="pd" resultType="pd">
		SELECT 
			b.GL_ID,
			b.ROLE_ID,
			b.FX_QX,
			b.FW_QX,
			b.QX1,
			b.QX2,
			b.QX3,
			b.QX4
		from SYS_ROLE a, SYS_GL_QX b, SYS_USER c
		where 
			a.QX_ID = b.GL_ID
		and 
			a.ROLE_ID = c.ROLE_ID
		and
			c.ROLE_ID =  '${ROLE_ID}'
		
		limit 0,1
	</select>

    <!-- 通过当前登录用的角色id获取用户权限数据 -->
    <select id="findYHbyrid" parameterType="pd" resultType="pd">
		SELECT 
			b.U_ID,
			b.C1,
			b.C2,
			b.C3,
			b.C4,
			b.Q1,
			b.Q2,
			b.Q3,
			b.Q4
		from SYS_ROLE a, SYS_USER_QX b, SYS_USER c
		where 
			a.QX_ID = b.U_ID
		and 
			a.ROLE_ID = c.ROLE_ID
		and
			c.ROLE_ID =  '${ROLE_ID}'
		limit 0,1
	</select>

    <!-- 列出K权限表里的数据 -->
    <select id="listAllkefu" parameterType="pd" resultType="pd">
		select 
			GL_ID,
			ROLE_ID,
			FX_QX,
			FW_QX,
			QX1,
			QX2,
			QX3,
			QX4
		from SYS_GL_QX
	</select>

    <!-- 列出G权限表里的数据 -->
    <select id="listAllGysQX" parameterType="pd" resultType="pd">
		select 
			U_ID,
			C1,
			C2,
			C3,
			C4,
			Q1,
			Q2,
			Q3,
			Q4
		from SYS_USER_QX
	</select>

    <!-- 给全部子职位加菜单权限 -->
    <update id="setAllRights" parameterType="pd">
		update SYS_ROLE 
		set RIGHTS=#{rights} 
		where PARENT_ID=#{roleId}
	</update>

    <update id="add_qx" parameterType="pd">
		update SYS_ROLE 
		set ADD_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>

    <update id="del_qx" parameterType="pd">
		update SYS_ROLE 
		set DEL_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>

    <update id="edit_qx" parameterType="pd">
		update SYS_ROLE 
		set EDIT_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>

    <update id="cha_qx" parameterType="pd">
		update SYS_ROLE 
		set CHA_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>

    <update id="kfqx1" parameterType="pd">
		update SYS_GL_QX 
		set QX1=#{value} 
		where GL_ID=#{kefu_id}
	</update>

    <update id="kfqx2" parameterType="pd">
		update SYS_GL_QX 
		set QX2=#{value} 
		where GL_ID=#{kefu_id}
	</update>

    <update id="fxqx" parameterType="pd">
		update SYS_GL_QX 
		set FX_QX=#{value} 
		where GL_ID=#{kefu_id}
	</update>

    <update id="fwqx" parameterType="pd">
		update SYS_GL_QX 
		set FW_QX=#{value} 
		where GL_ID=#{kefu_id}
	</update>

    <select id="listAllRoles" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from SYS_ROLE 
		where PARENT_ID = '0'
		ORDER BY ROLE_ID
	</select>

    <select id="listAllRolesByPId" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from SYS_ROLE  
		where 
			PARENT_ID = #{ROLE_ID} or ROLE_ID = #{ROLE_ID} 
		ORDER BY PARENT_ID,ROLE_ID
	</select>


    <select id="getRoleById" parameterType="String" resultMap="roleResultMap">
		select * from SYS_ROLE 
		where ROLE_ID=#{roleId}
	</select>


    <update id="updateRoleRights" parameterType="Role">
		update SYS_ROLE 
		set RIGHTS=#{RIGHTS} 
		where ROLE_ID=#{ROLE_ID}
	</update>
    <delete id="deleteRoleById" parameterType="String">
		delete from SYS_ROLE 
		where ROLE_ID=#{ROLE_ID}
	</delete>

    <!-- 删除K权限表里对应的数据 -->
    <delete id="deleteKeFuById" parameterType="String">
		delete from SYS_GL_QX 
		where GL_ID = #{ROLE_ID}
	</delete>

    <!-- 删除G权限表里对应的数据 -->
    <delete id="deleteGById" parameterType="String">
		delete from SYS_USER_QX 
		where U_ID = #{ROLE_ID}
	</delete>

    <!-- 保存K权限 -->
    <insert id="saveKeFu" parameterType="pd">
		insert into SYS_GL_QX (
			GL_ID,
			ROLE_ID,
			FX_QX,
			FW_QX,
			QX1,
			QX2,
			QX3,
			QX4
		) values (
			#{GL_ID},
			#{ROLE_ID},
			#{FX_QX},
			#{FW_QX},
			#{QX1},
			#{QX2},
			#{QX3},
			#{QX4}
		)
	</insert>

    <!-- 保存G权限 -->
    <insert id="saveGYSQX" parameterType="pd">
		insert into SYS_USER_QX (
			U_ID,
			C1,
			C2,
			C3,
			C4,
			Q1,
			Q2,
			Q3,
			Q4
		) values (
			#{U_ID},
			#{C1},
			#{C2},
			#{C3},
			#{C4},
			#{Q1},
			#{Q2},
			#{Q3},
			#{Q4}
		)
	</insert>

    <!-- 添加 -->
    <insert id="insert" parameterType="pd">
		insert into SYS_ROLE (
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		) values (
			#{ROLE_ID},
			#{ROLE_NAME},
			#{RIGHTS},
			#{PARENT_ID},
			#{ADD_QX},
			#{DEL_QX},
			#{EDIT_QX},
			#{CHA_QX},
			#{QX_ID}
		)
	</insert>

    <!-- 通过id查找 -->
    <select id="findObjectById" parameterType="pd" resultType="pd">
		select  
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX
		from SYS_ROLE
		where ROLE_ID = #{ROLE_ID}
	</select>

    <!-- 编辑角色 -->
    <update id="edit" parameterType="pd">
		update SYS_ROLE 
		set ROLE_NAME = #{ROLE_NAME}
		where ROLE_ID = #{ROLE_ID}
	</update>

    <select id="getRolesByName" parameterType="String" resultType="pd">
		select a.ROLE_NAME from SYS_ROLE a,SYS_USER b 
		where a.ROLE_ID = b.ROLE_ID and b.USERNAME=#{username}
	</select>

    <select id="getPermissionsByName" parameterType="String" resultType="String">
		SELECT 
		    a.ANQX_CODE
		FROM
		    sys_role_menu_buttons a,
		    sys_role b,
		    sys_menu c,
		    sys_buttons d,
		    sys_user e
		WHERE
		    a.role_id = b.role_id
	        AND a.menu_id = c.menu_id
	        AND a.buttons_id = d.buttons_id
	        AND b.role_id = e.role_id
	        AND d.enabled = 1
	        AND e.username = #{username}
	</select>

    <select id="getBtnRoleListByParams" parameterType="pd" resultType="hashmap">
		SELECT 
		    a.BUTTONS_ID,a.BUTTONS_NAME, a.BUTTONS_EVENT, a.description,b.ANQX_CODE,case WHEN b.GX_ID is null THEN 'false' else 'true' end checked
		FROM
		    sys_buttons a
		LEFT JOIN
		    sys_role_menu_buttons b 
		ON a.buttons_id = b.buttons_id 
		and b.ROLE_ID = #{ROLE_ID} and b.MENU_ID=#{MENU_ID}
		WHERE
		    a.enabled = 1 
		ORDER BY a.buttons_order
	</select>

    <select id="findRoleIdByName" parameterType="String" resultType="String">
		SELECT
			ROLE_ID
		FROM
			sys_role
		WHERE
			ROLE_NAME = #{roleName}
	</select>
    <select id="checkSysRole" parameterType="String" resultType="java.util.LinkedHashMap">
    	SELECT COUNT(*) SL FROM (
		SELECT 
	  		role_id 
		FROM
	  		sys_role t 
		WHERE t.PARENT_ID = '1' 
	  		OR role_id = '1' ) a WHERE a.role_id = #{roleId}
 	 </select>

    <select id="findNameByIds" resultType="java.lang.String">
        select ROLE_NAME from sys_role where role_id in
        <foreach collection="array" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </select>


    <select id="checkLeader" parameterType="pd" resultType="pd">
		SELECT
			a.*
		FROM
			sys_user a
		WHERE
			a.USERNAME = #{USERNAME}
		AND a.ROLE_ID IN (
			SELECT
				b.ROLE_ID
			FROM
				sys_role b
			WHERE
				b.ROLE_ID = "a9b2def77c874bbcaad93893090a78c3"
			OR b.PARENT_ID = "a9b2def77c874bbcaad93893090a78c3"
		)
	</select>

    <select id="checkFzRole" parameterType="String" resultType="java.util.LinkedHashMap">
    SELECT COUNT(*) SL FROM 
	  sys_role a
	WHERE a.role_id = #{roleId} and a.role_name like '%副总%'
  </select>
</mapper>